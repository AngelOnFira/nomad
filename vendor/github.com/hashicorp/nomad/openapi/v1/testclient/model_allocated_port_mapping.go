/*
 * nomad
 *
 * Documentation of the Nomad v1 API.
 *
 * API version: 1.0.0
 * Contact: support@hashicorp.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package testclient

import (
	"encoding/json"
)

// AllocatedPortMapping struct for AllocatedPortMapping
type AllocatedPortMapping struct {
	HostIP *string `json:"HostIP,omitempty"`
	Label *string `json:"Label,omitempty"`
	To *int64 `json:"To,omitempty"`
	Value *int64 `json:"Value,omitempty"`
}

// NewAllocatedPortMapping instantiates a new AllocatedPortMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllocatedPortMapping() *AllocatedPortMapping {
	this := AllocatedPortMapping{}
	return &this
}

// NewAllocatedPortMappingWithDefaults instantiates a new AllocatedPortMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllocatedPortMappingWithDefaults() *AllocatedPortMapping {
	this := AllocatedPortMapping{}
	return &this
}

// GetHostIP returns the HostIP field value if set, zero value otherwise.
func (o *AllocatedPortMapping) GetHostIP() string {
	if o == nil || o.HostIP == nil {
		var ret string
		return ret
	}
	return *o.HostIP
}

// GetHostIPOk returns a tuple with the HostIP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocatedPortMapping) GetHostIPOk() (*string, bool) {
	if o == nil || o.HostIP == nil {
		return nil, false
	}
	return o.HostIP, true
}

// HasHostIP returns a boolean if a field has been set.
func (o *AllocatedPortMapping) HasHostIP() bool {
	if o != nil && o.HostIP != nil {
		return true
	}

	return false
}

// SetHostIP gets a reference to the given string and assigns it to the HostIP field.
func (o *AllocatedPortMapping) SetHostIP(v string) {
	o.HostIP = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *AllocatedPortMapping) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocatedPortMapping) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *AllocatedPortMapping) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *AllocatedPortMapping) SetLabel(v string) {
	o.Label = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *AllocatedPortMapping) GetTo() int64 {
	if o == nil || o.To == nil {
		var ret int64
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocatedPortMapping) GetToOk() (*int64, bool) {
	if o == nil || o.To == nil {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *AllocatedPortMapping) HasTo() bool {
	if o != nil && o.To != nil {
		return true
	}

	return false
}

// SetTo gets a reference to the given int64 and assigns it to the To field.
func (o *AllocatedPortMapping) SetTo(v int64) {
	o.To = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AllocatedPortMapping) GetValue() int64 {
	if o == nil || o.Value == nil {
		var ret int64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocatedPortMapping) GetValueOk() (*int64, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AllocatedPortMapping) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given int64 and assigns it to the Value field.
func (o *AllocatedPortMapping) SetValue(v int64) {
	o.Value = &v
}

func (o AllocatedPortMapping) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HostIP != nil {
		toSerialize["HostIP"] = o.HostIP
	}
	if o.Label != nil {
		toSerialize["Label"] = o.Label
	}
	if o.To != nil {
		toSerialize["To"] = o.To
	}
	if o.Value != nil {
		toSerialize["Value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableAllocatedPortMapping struct {
	value *AllocatedPortMapping
	isSet bool
}

func (v NullableAllocatedPortMapping) Get() *AllocatedPortMapping {
	return v.value
}

func (v *NullableAllocatedPortMapping) Set(val *AllocatedPortMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableAllocatedPortMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableAllocatedPortMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllocatedPortMapping(val *AllocatedPortMapping) *NullableAllocatedPortMapping {
	return &NullableAllocatedPortMapping{value: val, isSet: true}
}

func (v NullableAllocatedPortMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllocatedPortMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


