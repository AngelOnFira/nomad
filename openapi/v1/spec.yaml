openapi: '3.0.3'
info:
  description: Documentation of the Nomad v1 API.
  title: nomad
  contact:
    email: support@hashicorp.com
  license:
    name: MIT 2
    url: 'https://github.com/hashicorp/nomad/blob/main/LICENSE'
  version: 1.0.0
servers:
  - url: '{protocol}://127.0.0.1:{port}/v1'
    description: Default localhost url.
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      port:
        default: "4646"
security:
  - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Nomad-Token
  parameters:
    AllParam:
      schema:
        type: integer
      description: Flag indicating whether to constrain by job creation index or not.
      name: all
      in: query
    IndexParam:
      schema:
        type: integer
      description: 'If set, wait until query exceeds given index. Must be provided with WaitParam.'
      name: index
      in: query
    JobNameParam:
      schema:
        type: string
      description: The job identifier.
      name: jobName
      in: path
      required: true
    NamespaceParam:
      schema:
        type: string
      description: Filters results based on the specified namespace
      name: namespace
      in: query
    NextTokenParam:
      schema:
        type: string
      description: Indicates where to start paging for queries that support pagination
      name: next_token
      in: query
    PerPageParam:
      schema:
        type: integer
      description: Maximum number of results to return
      name: per_page
      in: query
    PrefixParam:
      schema:
        type: string
      description: Constrains results to jobs that start with the defined prefix
      name: prefix
      in: query
    RegionParam:
      schema:
        type: string
      description: Filters results based on the specified region
      name: region
      in: query
    StaleParam:
      schema:
        type: string
      description: 'If present, results will include stale reads'
      name: stale
      in: query
    WaitParam:
      schema:
        type: integer
      description: Provided with IndexParam to wait for change
      name: wait
      in: query
    NomadTokenHeader:
      schema:
        type: string
      description: A Nomad ACL token
      name: X-Nomad-Token
      in: header
  headers:
    X-Nomad-Index:
      schema:
        type: integer
      description: >
        Endpoints that support blocking queries return an HTTP header named set
        this unique identifier representing the current state of the requested resource. On a new Nomad cluster the value of this index starts at 1.
    X-Nomad-Known-Leader:
      schema:
        type: boolean
      description: >
        Flag indicating the agent that fulfilled the request had known Raft leader
        at the time of the operation.
    X-Nomad-Last-Contact:
      schema:
        type: integer
      description: >
        If AllowStale is used, this is time elapsed since last contact between
        the follower and leader. This can be used to gauge staleness.
  responses:
    Forbidden:
      description: Forbidden
    InternalServerError:
      description: Internal server error
    MethodNotAllowed:
      description: Method not allowed
    NotFound:
      description: Not found
paths:
  /jobs:
    get:
      tags:
        - Jobs
      summary: 'This endpoint lists all known jobs in the system registered with Nomad.'
      description: >
        <p>This endpoint lists all known jobs in the system registered with Nomad.</p>
        <table>
        <thead>
        <tr>
        <th>Method</th>
        <th>Path</th>
        <th>Produces</th>
        </tr>
        </thead>
        <tbody><tr>
        <td><code>GET</code></td>
        <td><code>/v1/jobs</code></td>
        <td><code>application/json</code></td>
        </tr>
        </tbody></table>
        <p>The table below shows this endpoint&#39;s support for
        <a href="/api-docs#blocking-queries">blocking queries</a> and
        <a href="/api-docs#acls">required ACLs</a>.</p>
        <table>
        <thead>
        <tr>
        <th>Blocking Queries</th>
        <th>ACL Required</th>
        </tr>
        </thead>
        <tbody><tr>
        <td><code>YES</code></td>
        <td><code>namespace:list-jobs</code></td>
        </tr>
        </tbody></table>
        <h3 id="parameters">Parameters</h3>
        <ul>
        <li><p><code>prefix</code> <code>(string: &quot;&quot;)</code> - Specifies a string to filter jobs on based on
        an index prefix. This is specified as a query string parameter.</p>
        </li>
        <li><p><code>namespace</code> <code>(string: &quot;default&quot;)</code> - Specifies the target namespace. Specifying
        <code>*</code> would return all jobs across all the authorized namespaces.</p>
        </li>
        </ul>
        <h3 id="sample-request">Sample Request</h3>
        <pre><code class="language-shell-session">$ curl https://localhost:4646/v1/jobs
        </code></pre>
        <pre><code class="language-shell-session">$ curl https://localhost:4646/v1/jobs?prefix=team
        </code></pre>
        <pre><code class="language-shell-session">$ curl https://localhost:4646/v1/jobs?namespace=*&amp;prefix=team
        </code></pre>
        <h3 id="sample-response">Sample Response</h3>
        <pre><code class="language-json">[
          {
            &quot;ID&quot;: &quot;example&quot;,
            &quot;ParentID&quot;: &quot;&quot;,
            &quot;Name&quot;: &quot;example&quot;,
            &quot;Type&quot;: &quot;service&quot;,
            &quot;Priority&quot;: 50,
            &quot;Status&quot;: &quot;pending&quot;,
            &quot;StatusDescription&quot;: &quot;&quot;,
            &quot;JobSummary&quot;: {
              &quot;JobID&quot;: &quot;example&quot;,
              &quot;Namespace&quot;: &quot;default&quot;,
              &quot;Summary&quot;: {
                &quot;cache&quot;: {
                  &quot;Queued&quot;: 1,
                  &quot;Complete&quot;: 1,
                  &quot;Failed&quot;: 0,
                  &quot;Running&quot;: 0,
                  &quot;Starting&quot;: 0,
                  &quot;Lost&quot;: 0
                }
              },
              &quot;Children&quot;: {
                &quot;Pending&quot;: 0,
                &quot;Running&quot;: 0,
                &quot;Dead&quot;: 0
              },
              &quot;CreateIndex&quot;: 52,
              &quot;ModifyIndex&quot;: 96
            },
            &quot;CreateIndex&quot;: 52,
            &quot;ModifyIndex&quot;: 93,
            &quot;JobModifyIndex&quot;: 52
          }
        ]
        </code></pre>
      operationId: getJobs
      parameters:
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/StaleParam'
        - $ref: '#/components/parameters/PrefixParam'
        - $ref: '#/components/parameters/NamespaceParam'
        - $ref: '#/components/parameters/PerPageParam'
        - $ref: '#/components/parameters/NextTokenParam'
        - $ref: '#/components/parameters/IndexParam'
        - $ref: '#/components/parameters/WaitParam'
        - $ref: '#/components/parameters/NomadTokenHeader'
      responses:
        '200':
          description: List of jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobListStub'
          headers:
            X-Nomad-Index:
              $ref: '#/components/headers/X-Nomad-Index'
            X-Nomad-Known-Leader:
              $ref: '#/components/headers/X-Nomad-Known-Leader'
            X-Nomad-Last-Contact:
              $ref: '#/components/headers/X-Nomad-Last-Contact'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /jobs/parse:
    post:
      tags:
        - Jobs
      summary: 'Parses a HCL jobspec and produce the equivalent JSON encoded job. See https://www.nomadproject.io/api-docs/jobs#parse-job.'
      description: >

      operationId: postJobsParseRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobsParseRequest'
      responses:
        '200':
          description: 'Parsed HCL job spec in JSON format.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: (empty)
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /job/{jobName}/allocations:
    get:
      tags:
        - Jobs
      summary: >
        Gets information about a single job's allocations.
        See https://www.nomadproject.io/api-docs/allocations#list-allocations.
      operationId: getJobAllocations
      parameters:
        - $ref: '#/components/parameters/JobNameParam'
        - $ref: '#/components/parameters/AllParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/StaleParam'
        - $ref: '#/components/parameters/PrefixParam'
        - $ref: '#/components/parameters/NamespaceParam'
        - $ref: '#/components/parameters/PerPageParam'
        - $ref: '#/components/parameters/NextTokenParam'
        - $ref: '#/components/parameters/IndexParam'
        - $ref: '#/components/parameters/WaitParam'
        - $ref: '#/components/parameters/NomadTokenHeader'
      responses:
        '200':
          description: List of allocations for the specified job.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AllocListStub'
          headers:
            X-Nomad-Index:
              $ref: '#/components/headers/X-Nomad-Index'
            X-Nomad-Known-Leader:
              $ref: '#/components/headers/X-Nomad-Known-Leader'
            X-Nomad-Last-Contact:
              $ref: '#/components/headers/X-Nomad-Last-Contact'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /job/{jobName}/evaluate:
    post:
      tags:
        - Jobs
      summary: 'Creates a new evaluation for the given job. This can be used to force run the scheduling logic if necessary. See https://www.nomadproject.io/api-docs/jobs#create-job-evaluation.'
      operationId: postJobEvaluateRequest
      parameters:
        - $ref: '#/components/parameters/JobNameParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/NamespaceParam'
        - $ref: '#/components/parameters/NomadTokenHeader'
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobEvaluateRequest'
      responses:
        '200':
          description: Contains relevant query response metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRegisterResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /job/{jobName}/evaluations:
    get:
      tags:
        - Jobs
      summary: >
        Gets information about a single job's evaluations.
        See [documentation](https://www.nomadproject.io/api-docs/evaluations#list-evaluations).
      operationId: getJobEvaluations
      parameters:
        - $ref: '#/components/parameters/JobNameParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/StaleParam'
        - $ref: '#/components/parameters/PrefixParam'
        - $ref: '#/components/parameters/NamespaceParam'
        - $ref: '#/components/parameters/PerPageParam'
        - $ref: '#/components/parameters/NextTokenParam'
        - $ref: '#/components/parameters/IndexParam'
        - $ref: '#/components/parameters/WaitParam'
        - $ref: '#/components/parameters/NomadTokenHeader'
      responses:
        '200':
          description: A list of job evaluations.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation'
          headers:
            X-Nomad-Index:
              $ref: '#/components/headers/X-Nomad-Index'
            X-Nomad-Known-Leader:
              $ref: '#/components/headers/X-Nomad-Known-Leader'
            X-Nomad-Last-Contact:
              $ref: '#/components/headers/X-Nomad-Last-Contact'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /job/{jobName}/periodic/force:
    post:
      tags:
        - Jobs
      summary: 'Forces a new instance of the periodic job. A new instance will be created even if it violates the job''s prohibit_overlap settings. As such, this should be only used to immediately run a periodic job. See [documentation](https://www.nomadproject.io/docs/commands/job/periodic-force).'
      operationId: putJobForceRequest
      parameters:
        - $ref: '#/components/parameters/JobNameParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/NamespaceParam'
        - $ref: '#/components/parameters/NomadTokenHeader'
      responses:
        '200':
          description: Returns a type containing relevant write operation metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodicForceResponse'
          headers:
            X-Nomad-Index:
              $ref: '#/components/headers/X-Nomad-Index'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /job/{jobName}/plan:
    post:
      tags:
        - Jobs
      summary: 'This endpoint invokes a dry-run of the scheduler for the job. See https://www.nomadproject.io/api-docs/jobs#create-job-plan'
      operationId: postJobPlanRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobPlanRequest'
      parameters:
        - $ref: '#/components/parameters/JobNameParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/NamespaceParam'
        - $ref: '#/components/parameters/NomadTokenHeader'
      responses:
        '200':
          description: Returns a payload detailing what would have happened had
            the job been run.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPlanResponse'
          headers:
            X-Nomad-Index:
              $ref: '#/components/headers/X-Nomad-Index'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /job/{jobName}/summary:
    get:
      tags:
        - Jobs
      summary: 'This endpoint reads summary information about a job. https://www.nomadproject.io/api-docs/jobs#read-job-summary.'
      operationId: getJobSummary
      parameters:
        - $ref: '#/components/parameters/JobNameParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/StaleParam'
        - $ref: '#/components/parameters/PrefixParam'
        - $ref: '#/components/parameters/NamespaceParam'
        - $ref: '#/components/parameters/PerPageParam'
        - $ref: '#/components/parameters/NextTokenParam'
        - $ref: '#/components/parameters/IndexParam'
        - $ref: '#/components/parameters/WaitParam'
        - $ref: '#/components/parameters/NomadTokenHeader'
      responses:
        '200':
          description: Returns a summary of the job including status and children.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSummary'
          headers:
            X-Nomad-Index:
              $ref: '#/components/headers/X-Nomad-Index'
            X-Nomad-Known-Leader:
              $ref: '#/components/headers/X-Nomad-Known-Leader'
            X-Nomad-Last-Contact:
              $ref: '#/components/headers/X-Nomad-Last-Contact'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/InternalServerError'