paths:
  /jobs:
    get:
      tags:
        - Jobs
      summary: >-
        List all known jobs registered with Nomad. See
        https://www.nomadproject.io/api-docs/jobs#list-jobs.
      operationId: getJobs
      parameters:
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/StaleParam'
        - $ref: '#/components/parameters/PrefixParam'
        - $ref: '#/components/parameters/NamespaceParam'
        - $ref: '#/components/parameters/PerPageParam'
        - $ref: '#/components/parameters/NextTokenParam'
        - $ref: '#/components/parameters/IndexParam'
        - $ref: '#/components/parameters/WaitParam'
        - $ref: '#/components/parameters/NomadTokenHeader'
      responses:
        '200':
          description: >-
            <p>This endpoint lists all known jobs in the system registered with
            Nomad.</p>

            <table>
                <thead>
                    <tr>
                        <th>Method</th>
                        <th>Path</th>
                        <th>Produces</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>GET</code></td>
                        <td><code>/v1/jobs</code></td>
                        <td><code>application/json</code></td>
                    </tr>
                </tbody>
            </table>

            <p>The table below shows this endpoint&#39;s support for
                <a href="/api-docs#blocking-queries">blocking queries</a> and
                <a href="/api-docs#acls">required ACLs</a>.
            </p>

            <table>
                <thead>
                    <tr>
                        <th>Blocking Queries</th>
                        <th>ACL Required</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>YES</code></td>
                        <td><code>namespace:list-jobs</code></td>
                    </tr>
                </tbody>
            </table>

            <h3 id="parameters">Parameters</h3>

            <ul>
                <li>
                    <p><code>prefix</code> <code>(string: &quot;&quot;)</code> - Specifies a string to filter jobs on based on
                        an index prefix. This is specified as a query string parameter.</p>
                </li>
                <li>
                    <p><code>namespace</code> <code>(string: &quot;default&quot;)</code> - Specifies the target namespace. Specifying
                        <code>*</code> would return all jobs across all the authorized namespaces.
                    </p>
                </li>
            </ul>

            <h3 id="sample-request">Sample Request</h3>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?prefix=team

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?namespace=*&amp;prefix=team

            </code></pre>

            <h3 id="sample-response">Sample Response</h3>

            <pre><code class="language-json">[
              {
                &quot;ID&quot;: &quot;example&quot;,
                &quot;ParentID&quot;: &quot;&quot;,
                &quot;Name&quot;: &quot;example&quot;,
                &quot;Type&quot;: &quot;service&quot;,
                &quot;Priority&quot;: 50,
                &quot;Status&quot;: &quot;pending&quot;,
                &quot;StatusDescription&quot;: &quot;&quot;,
                &quot;JobSummary&quot;: {
                  &quot;JobID&quot;: &quot;example&quot;,
                  &quot;Namespace&quot;: &quot;default&quot;,
                  &quot;Summary&quot;: {
                    &quot;cache&quot;: {
                      &quot;Queued&quot;: 1,
                      &quot;Complete&quot;: 1,
                      &quot;Failed&quot;: 0,
                      &quot;Running&quot;: 0,
                      &quot;Starting&quot;: 0,
                      &quot;Lost&quot;: 0
                    }
                  },
                  &quot;Children&quot;: {
                    &quot;Pending&quot;: 0,
                    &quot;Running&quot;: 0,
                    &quot;Dead&quot;: 0
                  },
                  &quot;CreateIndex&quot;: 52,
                  &quot;ModifyIndex&quot;: 96
                },
                &quot;CreateIndex&quot;: 52,
                &quot;ModifyIndex&quot;: 93,
                &quot;JobModifyIndex&quot;: 52
              }
            ]

            </code></pre>
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobListStub'
          headers:
            X-Nomad-Index:
              $ref: '#/components/headers/X-Nomad-Index'
            X-Nomad-Known-Leader:
              $ref: '#/components/headers/X-Nomad-Known-Leader'
            X-Nomad-Last-Contact:
              $ref: '#/components/headers/X-Nomad-Last-Contact'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: >-
        <p>This endpoint lists all known jobs in the system registered with
        Nomad.</p>

        <table>
            <thead>
                <tr>
                    <th>Method</th>
                    <th>Path</th>
                    <th>Produces</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><code>GET</code></td>
                    <td><code>/v1/jobs</code></td>
                    <td><code>application/json</code></td>
                </tr>
            </tbody>
        </table>

        <p>The table below shows this endpoint&#39;s support for
            <a href="/api-docs#blocking-queries">blocking queries</a> and
            <a href="/api-docs#acls">required ACLs</a>.
        </p>

        <table>
            <thead>
                <tr>
                    <th>Blocking Queries</th>
                    <th>ACL Required</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><code>YES</code></td>
                    <td><code>namespace:list-jobs</code></td>
                </tr>
            </tbody>
        </table>

        <h3 id="parameters">Parameters</h3>

        <ul>
            <li>
                <p><code>prefix</code> <code>(string: &quot;&quot;)</code> - Specifies a string to filter jobs on based on
                    an index prefix. This is specified as a query string parameter.</p>
            </li>
            <li>
                <p><code>namespace</code> <code>(string: &quot;default&quot;)</code> - Specifies the target namespace. Specifying
                    <code>*</code> would return all jobs across all the authorized namespaces.
                </p>
            </li>
        </ul>

        <h3 id="sample-request">Sample Request</h3>

        <pre><code class="language-shell-session">$ curl
        https://localhost:4646/v1/jobs

        </code></pre>

        <pre><code class="language-shell-session">$ curl
        https://localhost:4646/v1/jobs?prefix=team

        </code></pre>

        <pre><code class="language-shell-session">$ curl
        https://localhost:4646/v1/jobs?namespace=*&amp;prefix=team

        </code></pre>

        <h3 id="sample-response">Sample Response</h3>

        <pre><code class="language-json">[
          {
            &quot;ID&quot;: &quot;example&quot;,
            &quot;ParentID&quot;: &quot;&quot;,
            &quot;Name&quot;: &quot;example&quot;,
            &quot;Type&quot;: &quot;service&quot;,
            &quot;Priority&quot;: 50,
            &quot;Status&quot;: &quot;pending&quot;,
            &quot;StatusDescription&quot;: &quot;&quot;,
            &quot;JobSummary&quot;: {
              &quot;JobID&quot;: &quot;example&quot;,
              &quot;Namespace&quot;: &quot;default&quot;,
              &quot;Summary&quot;: {
                &quot;cache&quot;: {
                  &quot;Queued&quot;: 1,
                  &quot;Complete&quot;: 1,
                  &quot;Failed&quot;: 0,
                  &quot;Running&quot;: 0,
                  &quot;Starting&quot;: 0,
                  &quot;Lost&quot;: 0
                }
              },
              &quot;Children&quot;: {
                &quot;Pending&quot;: 0,
                &quot;Running&quot;: 0,
                &quot;Dead&quot;: 0
              },
              &quot;CreateIndex&quot;: 52,
              &quot;ModifyIndex&quot;: 96
            },
            &quot;CreateIndex&quot;: 52,
            &quot;ModifyIndex&quot;: 93,
            &quot;JobModifyIndex&quot;: 52
          }
        ]

        </code></pre>
  /jobs/parse:
    post:
      tags:
        - Jobs
      summary: >-
        Parses a HCL jobspec and produce the equivalent JSON encoded job. See
        https://www.nomadproject.io/api-docs/jobs#parse-job.
      operationId: postJobsParseRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobsParseRequest'
      responses:
        '200':
          description: >-
            <p>This endpoint lists all known jobs in the system registered with
            Nomad.</p>

            <table>
                <thead>
                    <tr>
                        <th>Method</th>
                        <th>Path</th>
                        <th>Produces</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>GET</code></td>
                        <td><code>/v1/jobs</code></td>
                        <td><code>application/json</code></td>
                    </tr>
                </tbody>
            </table>

            <p>The table below shows this endpoint&#39;s support for
                <a href="/api-docs#blocking-queries">blocking queries</a> and
                <a href="/api-docs#acls">required ACLs</a>.
            </p>

            <table>
                <thead>
                    <tr>
                        <th>Blocking Queries</th>
                        <th>ACL Required</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>YES</code></td>
                        <td><code>namespace:list-jobs</code></td>
                    </tr>
                </tbody>
            </table>

            <h3 id="parameters">Parameters</h3>

            <ul>
                <li>
                    <p><code>prefix</code> <code>(string: &quot;&quot;)</code> - Specifies a string to filter jobs on based on
                        an index prefix. This is specified as a query string parameter.</p>
                </li>
                <li>
                    <p><code>namespace</code> <code>(string: &quot;default&quot;)</code> - Specifies the target namespace. Specifying
                        <code>*</code> would return all jobs across all the authorized namespaces.
                    </p>
                </li>
            </ul>

            <h3 id="sample-request">Sample Request</h3>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?prefix=team

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?namespace=*&amp;prefix=team

            </code></pre>

            <h3 id="sample-response">Sample Response</h3>

            <pre><code class="language-json">[
              {
                &quot;ID&quot;: &quot;example&quot;,
                &quot;ParentID&quot;: &quot;&quot;,
                &quot;Name&quot;: &quot;example&quot;,
                &quot;Type&quot;: &quot;service&quot;,
                &quot;Priority&quot;: 50,
                &quot;Status&quot;: &quot;pending&quot;,
                &quot;StatusDescription&quot;: &quot;&quot;,
                &quot;JobSummary&quot;: {
                  &quot;JobID&quot;: &quot;example&quot;,
                  &quot;Namespace&quot;: &quot;default&quot;,
                  &quot;Summary&quot;: {
                    &quot;cache&quot;: {
                      &quot;Queued&quot;: 1,
                      &quot;Complete&quot;: 1,
                      &quot;Failed&quot;: 0,
                      &quot;Running&quot;: 0,
                      &quot;Starting&quot;: 0,
                      &quot;Lost&quot;: 0
                    }
                  },
                  &quot;Children&quot;: {
                    &quot;Pending&quot;: 0,
                    &quot;Running&quot;: 0,
                    &quot;Dead&quot;: 0
                  },
                  &quot;CreateIndex&quot;: 52,
                  &quot;ModifyIndex&quot;: 96
                },
                &quot;CreateIndex&quot;: 52,
                &quot;ModifyIndex&quot;: 93,
                &quot;JobModifyIndex&quot;: 52
              }
            ]

            </code></pre>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: >-
            <p>This endpoint lists all known jobs in the system registered with
            Nomad.</p>

            <table>
                <thead>
                    <tr>
                        <th>Method</th>
                        <th>Path</th>
                        <th>Produces</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>GET</code></td>
                        <td><code>/v1/jobs</code></td>
                        <td><code>application/json</code></td>
                    </tr>
                </tbody>
            </table>

            <p>The table below shows this endpoint&#39;s support for
                <a href="/api-docs#blocking-queries">blocking queries</a> and
                <a href="/api-docs#acls">required ACLs</a>.
            </p>

            <table>
                <thead>
                    <tr>
                        <th>Blocking Queries</th>
                        <th>ACL Required</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>YES</code></td>
                        <td><code>namespace:list-jobs</code></td>
                    </tr>
                </tbody>
            </table>

            <h3 id="parameters">Parameters</h3>

            <ul>
                <li>
                    <p><code>prefix</code> <code>(string: &quot;&quot;)</code> - Specifies a string to filter jobs on based on
                        an index prefix. This is specified as a query string parameter.</p>
                </li>
                <li>
                    <p><code>namespace</code> <code>(string: &quot;default&quot;)</code> - Specifies the target namespace. Specifying
                        <code>*</code> would return all jobs across all the authorized namespaces.
                    </p>
                </li>
            </ul>

            <h3 id="sample-request">Sample Request</h3>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?prefix=team

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?namespace=*&amp;prefix=team

            </code></pre>

            <h3 id="sample-response">Sample Response</h3>

            <pre><code class="language-json">[
              {
                &quot;ID&quot;: &quot;example&quot;,
                &quot;ParentID&quot;: &quot;&quot;,
                &quot;Name&quot;: &quot;example&quot;,
                &quot;Type&quot;: &quot;service&quot;,
                &quot;Priority&quot;: 50,
                &quot;Status&quot;: &quot;pending&quot;,
                &quot;StatusDescription&quot;: &quot;&quot;,
                &quot;JobSummary&quot;: {
                  &quot;JobID&quot;: &quot;example&quot;,
                  &quot;Namespace&quot;: &quot;default&quot;,
                  &quot;Summary&quot;: {
                    &quot;cache&quot;: {
                      &quot;Queued&quot;: 1,
                      &quot;Complete&quot;: 1,
                      &quot;Failed&quot;: 0,
                      &quot;Running&quot;: 0,
                      &quot;Starting&quot;: 0,
                      &quot;Lost&quot;: 0
                    }
                  },
                  &quot;Children&quot;: {
                    &quot;Pending&quot;: 0,
                    &quot;Running&quot;: 0,
                    &quot;Dead&quot;: 0
                  },
                  &quot;CreateIndex&quot;: 52,
                  &quot;ModifyIndex&quot;: 96
                },
                &quot;CreateIndex&quot;: 52,
                &quot;ModifyIndex&quot;: 93,
                &quot;JobModifyIndex&quot;: 52
              }
            ]

            </code></pre>
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /job/{jobName}/allocations:
    get:
      tags:
        - Jobs
      summary: >
        Gets information about a single job's allocations. See
        https://www.nomadproject.io/api-docs/allocations#list-allocations.
      operationId: getJobAllocations
      parameters:
        - $ref: '#/components/parameters/JobNameParam'
        - $ref: '#/components/parameters/AllParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/StaleParam'
        - $ref: '#/components/parameters/PrefixParam'
        - $ref: '#/components/parameters/NamespaceParam'
        - $ref: '#/components/parameters/PerPageParam'
        - $ref: '#/components/parameters/NextTokenParam'
        - $ref: '#/components/parameters/IndexParam'
        - $ref: '#/components/parameters/WaitParam'
        - $ref: '#/components/parameters/NomadTokenHeader'
      responses:
        '200':
          description: >-
            <p>This endpoint lists all known jobs in the system registered with
            Nomad.</p>

            <table>
                <thead>
                    <tr>
                        <th>Method</th>
                        <th>Path</th>
                        <th>Produces</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>GET</code></td>
                        <td><code>/v1/jobs</code></td>
                        <td><code>application/json</code></td>
                    </tr>
                </tbody>
            </table>

            <p>The table below shows this endpoint&#39;s support for
                <a href="/api-docs#blocking-queries">blocking queries</a> and
                <a href="/api-docs#acls">required ACLs</a>.
            </p>

            <table>
                <thead>
                    <tr>
                        <th>Blocking Queries</th>
                        <th>ACL Required</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>YES</code></td>
                        <td><code>namespace:list-jobs</code></td>
                    </tr>
                </tbody>
            </table>

            <h3 id="parameters">Parameters</h3>

            <ul>
                <li>
                    <p><code>prefix</code> <code>(string: &quot;&quot;)</code> - Specifies a string to filter jobs on based on
                        an index prefix. This is specified as a query string parameter.</p>
                </li>
                <li>
                    <p><code>namespace</code> <code>(string: &quot;default&quot;)</code> - Specifies the target namespace. Specifying
                        <code>*</code> would return all jobs across all the authorized namespaces.
                    </p>
                </li>
            </ul>

            <h3 id="sample-request">Sample Request</h3>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?prefix=team

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?namespace=*&amp;prefix=team

            </code></pre>

            <h3 id="sample-response">Sample Response</h3>

            <pre><code class="language-json">[
              {
                &quot;ID&quot;: &quot;example&quot;,
                &quot;ParentID&quot;: &quot;&quot;,
                &quot;Name&quot;: &quot;example&quot;,
                &quot;Type&quot;: &quot;service&quot;,
                &quot;Priority&quot;: 50,
                &quot;Status&quot;: &quot;pending&quot;,
                &quot;StatusDescription&quot;: &quot;&quot;,
                &quot;JobSummary&quot;: {
                  &quot;JobID&quot;: &quot;example&quot;,
                  &quot;Namespace&quot;: &quot;default&quot;,
                  &quot;Summary&quot;: {
                    &quot;cache&quot;: {
                      &quot;Queued&quot;: 1,
                      &quot;Complete&quot;: 1,
                      &quot;Failed&quot;: 0,
                      &quot;Running&quot;: 0,
                      &quot;Starting&quot;: 0,
                      &quot;Lost&quot;: 0
                    }
                  },
                  &quot;Children&quot;: {
                    &quot;Pending&quot;: 0,
                    &quot;Running&quot;: 0,
                    &quot;Dead&quot;: 0
                  },
                  &quot;CreateIndex&quot;: 52,
                  &quot;ModifyIndex&quot;: 96
                },
                &quot;CreateIndex&quot;: 52,
                &quot;ModifyIndex&quot;: 93,
                &quot;JobModifyIndex&quot;: 52
              }
            ]

            </code></pre>
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AllocListStub'
          headers:
            X-Nomad-Index:
              $ref: '#/components/headers/X-Nomad-Index'
            X-Nomad-Known-Leader:
              $ref: '#/components/headers/X-Nomad-Known-Leader'
            X-Nomad-Last-Contact:
              $ref: '#/components/headers/X-Nomad-Last-Contact'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /job/{jobName}/evaluate:
    post:
      tags:
        - Jobs
      summary: >-
        Creates a new evaluation for the given job. This can be used to force
        run the scheduling logic if necessary. See
        https://www.nomadproject.io/api-docs/jobs#create-job-evaluation.
      operationId: postJobEvaluateRequest
      parameters:
        - $ref: '#/components/parameters/JobNameParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/NamespaceParam'
        - $ref: '#/components/parameters/NomadTokenHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobEvaluateRequest'
      responses:
        '200':
          description: >-
            <p>This endpoint lists all known jobs in the system registered with
            Nomad.</p>

            <table>
                <thead>
                    <tr>
                        <th>Method</th>
                        <th>Path</th>
                        <th>Produces</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>GET</code></td>
                        <td><code>/v1/jobs</code></td>
                        <td><code>application/json</code></td>
                    </tr>
                </tbody>
            </table>

            <p>The table below shows this endpoint&#39;s support for
                <a href="/api-docs#blocking-queries">blocking queries</a> and
                <a href="/api-docs#acls">required ACLs</a>.
            </p>

            <table>
                <thead>
                    <tr>
                        <th>Blocking Queries</th>
                        <th>ACL Required</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>YES</code></td>
                        <td><code>namespace:list-jobs</code></td>
                    </tr>
                </tbody>
            </table>

            <h3 id="parameters">Parameters</h3>

            <ul>
                <li>
                    <p><code>prefix</code> <code>(string: &quot;&quot;)</code> - Specifies a string to filter jobs on based on
                        an index prefix. This is specified as a query string parameter.</p>
                </li>
                <li>
                    <p><code>namespace</code> <code>(string: &quot;default&quot;)</code> - Specifies the target namespace. Specifying
                        <code>*</code> would return all jobs across all the authorized namespaces.
                    </p>
                </li>
            </ul>

            <h3 id="sample-request">Sample Request</h3>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?prefix=team

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?namespace=*&amp;prefix=team

            </code></pre>

            <h3 id="sample-response">Sample Response</h3>

            <pre><code class="language-json">[
              {
                &quot;ID&quot;: &quot;example&quot;,
                &quot;ParentID&quot;: &quot;&quot;,
                &quot;Name&quot;: &quot;example&quot;,
                &quot;Type&quot;: &quot;service&quot;,
                &quot;Priority&quot;: 50,
                &quot;Status&quot;: &quot;pending&quot;,
                &quot;StatusDescription&quot;: &quot;&quot;,
                &quot;JobSummary&quot;: {
                  &quot;JobID&quot;: &quot;example&quot;,
                  &quot;Namespace&quot;: &quot;default&quot;,
                  &quot;Summary&quot;: {
                    &quot;cache&quot;: {
                      &quot;Queued&quot;: 1,
                      &quot;Complete&quot;: 1,
                      &quot;Failed&quot;: 0,
                      &quot;Running&quot;: 0,
                      &quot;Starting&quot;: 0,
                      &quot;Lost&quot;: 0
                    }
                  },
                  &quot;Children&quot;: {
                    &quot;Pending&quot;: 0,
                    &quot;Running&quot;: 0,
                    &quot;Dead&quot;: 0
                  },
                  &quot;CreateIndex&quot;: 52,
                  &quot;ModifyIndex&quot;: 96
                },
                &quot;CreateIndex&quot;: 52,
                &quot;ModifyIndex&quot;: 93,
                &quot;JobModifyIndex&quot;: 52
              }
            ]

            </code></pre>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRegisterResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /job/{jobName}/evaluations:
    get:
      tags:
        - Jobs
      summary: >
        Gets information about a single job's evaluations. See
        [documentation](https://www.nomadproject.io/api-docs/evaluations#list-evaluations).
      operationId: getJobEvaluations
      parameters:
        - $ref: '#/components/parameters/JobNameParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/StaleParam'
        - $ref: '#/components/parameters/PrefixParam'
        - $ref: '#/components/parameters/NamespaceParam'
        - $ref: '#/components/parameters/PerPageParam'
        - $ref: '#/components/parameters/NextTokenParam'
        - $ref: '#/components/parameters/IndexParam'
        - $ref: '#/components/parameters/WaitParam'
        - $ref: '#/components/parameters/NomadTokenHeader'
      responses:
        '200':
          description: >-
            <p>This endpoint lists all known jobs in the system registered with
            Nomad.</p>

            <table>
                <thead>
                    <tr>
                        <th>Method</th>
                        <th>Path</th>
                        <th>Produces</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>GET</code></td>
                        <td><code>/v1/jobs</code></td>
                        <td><code>application/json</code></td>
                    </tr>
                </tbody>
            </table>

            <p>The table below shows this endpoint&#39;s support for
                <a href="/api-docs#blocking-queries">blocking queries</a> and
                <a href="/api-docs#acls">required ACLs</a>.
            </p>

            <table>
                <thead>
                    <tr>
                        <th>Blocking Queries</th>
                        <th>ACL Required</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>YES</code></td>
                        <td><code>namespace:list-jobs</code></td>
                    </tr>
                </tbody>
            </table>

            <h3 id="parameters">Parameters</h3>

            <ul>
                <li>
                    <p><code>prefix</code> <code>(string: &quot;&quot;)</code> - Specifies a string to filter jobs on based on
                        an index prefix. This is specified as a query string parameter.</p>
                </li>
                <li>
                    <p><code>namespace</code> <code>(string: &quot;default&quot;)</code> - Specifies the target namespace. Specifying
                        <code>*</code> would return all jobs across all the authorized namespaces.
                    </p>
                </li>
            </ul>

            <h3 id="sample-request">Sample Request</h3>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?prefix=team

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?namespace=*&amp;prefix=team

            </code></pre>

            <h3 id="sample-response">Sample Response</h3>

            <pre><code class="language-json">[
              {
                &quot;ID&quot;: &quot;example&quot;,
                &quot;ParentID&quot;: &quot;&quot;,
                &quot;Name&quot;: &quot;example&quot;,
                &quot;Type&quot;: &quot;service&quot;,
                &quot;Priority&quot;: 50,
                &quot;Status&quot;: &quot;pending&quot;,
                &quot;StatusDescription&quot;: &quot;&quot;,
                &quot;JobSummary&quot;: {
                  &quot;JobID&quot;: &quot;example&quot;,
                  &quot;Namespace&quot;: &quot;default&quot;,
                  &quot;Summary&quot;: {
                    &quot;cache&quot;: {
                      &quot;Queued&quot;: 1,
                      &quot;Complete&quot;: 1,
                      &quot;Failed&quot;: 0,
                      &quot;Running&quot;: 0,
                      &quot;Starting&quot;: 0,
                      &quot;Lost&quot;: 0
                    }
                  },
                  &quot;Children&quot;: {
                    &quot;Pending&quot;: 0,
                    &quot;Running&quot;: 0,
                    &quot;Dead&quot;: 0
                  },
                  &quot;CreateIndex&quot;: 52,
                  &quot;ModifyIndex&quot;: 96
                },
                &quot;CreateIndex&quot;: 52,
                &quot;ModifyIndex&quot;: 93,
                &quot;JobModifyIndex&quot;: 52
              }
            ]

            </code></pre>
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evaluation'
          headers:
            X-Nomad-Index:
              $ref: '#/components/headers/X-Nomad-Index'
            X-Nomad-Known-Leader:
              $ref: '#/components/headers/X-Nomad-Known-Leader'
            X-Nomad-Last-Contact:
              $ref: '#/components/headers/X-Nomad-Last-Contact'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /job/{jobName}/periodic/force:
    post:
      tags:
        - Jobs
      summary: >-
        Forces a new instance of the periodic job. A new instance will be
        created even if it violates the job's prohibit_overlap settings. As
        such, this should be only used to immediately run a periodic job. See
        [documentation](https://www.nomadproject.io/docs/commands/job/periodic-force).
      operationId: putJobForceRequest
      parameters:
        - $ref: '#/components/parameters/JobNameParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/NamespaceParam'
        - $ref: '#/components/parameters/NomadTokenHeader'
      responses:
        '200':
          description: >-
            <p>This endpoint lists all known jobs in the system registered with
            Nomad.</p>

            <table>
                <thead>
                    <tr>
                        <th>Method</th>
                        <th>Path</th>
                        <th>Produces</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>GET</code></td>
                        <td><code>/v1/jobs</code></td>
                        <td><code>application/json</code></td>
                    </tr>
                </tbody>
            </table>

            <p>The table below shows this endpoint&#39;s support for
                <a href="/api-docs#blocking-queries">blocking queries</a> and
                <a href="/api-docs#acls">required ACLs</a>.
            </p>

            <table>
                <thead>
                    <tr>
                        <th>Blocking Queries</th>
                        <th>ACL Required</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>YES</code></td>
                        <td><code>namespace:list-jobs</code></td>
                    </tr>
                </tbody>
            </table>

            <h3 id="parameters">Parameters</h3>

            <ul>
                <li>
                    <p><code>prefix</code> <code>(string: &quot;&quot;)</code> - Specifies a string to filter jobs on based on
                        an index prefix. This is specified as a query string parameter.</p>
                </li>
                <li>
                    <p><code>namespace</code> <code>(string: &quot;default&quot;)</code> - Specifies the target namespace. Specifying
                        <code>*</code> would return all jobs across all the authorized namespaces.
                    </p>
                </li>
            </ul>

            <h3 id="sample-request">Sample Request</h3>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?prefix=team

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?namespace=*&amp;prefix=team

            </code></pre>

            <h3 id="sample-response">Sample Response</h3>

            <pre><code class="language-json">[
              {
                &quot;ID&quot;: &quot;example&quot;,
                &quot;ParentID&quot;: &quot;&quot;,
                &quot;Name&quot;: &quot;example&quot;,
                &quot;Type&quot;: &quot;service&quot;,
                &quot;Priority&quot;: 50,
                &quot;Status&quot;: &quot;pending&quot;,
                &quot;StatusDescription&quot;: &quot;&quot;,
                &quot;JobSummary&quot;: {
                  &quot;JobID&quot;: &quot;example&quot;,
                  &quot;Namespace&quot;: &quot;default&quot;,
                  &quot;Summary&quot;: {
                    &quot;cache&quot;: {
                      &quot;Queued&quot;: 1,
                      &quot;Complete&quot;: 1,
                      &quot;Failed&quot;: 0,
                      &quot;Running&quot;: 0,
                      &quot;Starting&quot;: 0,
                      &quot;Lost&quot;: 0
                    }
                  },
                  &quot;Children&quot;: {
                    &quot;Pending&quot;: 0,
                    &quot;Running&quot;: 0,
                    &quot;Dead&quot;: 0
                  },
                  &quot;CreateIndex&quot;: 52,
                  &quot;ModifyIndex&quot;: 96
                },
                &quot;CreateIndex&quot;: 52,
                &quot;ModifyIndex&quot;: 93,
                &quot;JobModifyIndex&quot;: 52
              }
            ]

            </code></pre>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodicForceResponse'
          headers:
            X-Nomad-Index:
              $ref: '#/components/headers/X-Nomad-Index'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /job/{jobName}/plan:
    post:
      tags:
        - Jobs
      summary: >-
        This endpoint invokes a dry-run of the scheduler for the job. See
        https://www.nomadproject.io/api-docs/jobs#create-job-plan
      operationId: postJobPlanRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobPlanRequest'
      parameters:
        - $ref: '#/components/parameters/JobNameParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/NamespaceParam'
        - $ref: '#/components/parameters/NomadTokenHeader'
      responses:
        '200':
          description: >-
            <p>This endpoint lists all known jobs in the system registered with
            Nomad.</p>

            <table>
                <thead>
                    <tr>
                        <th>Method</th>
                        <th>Path</th>
                        <th>Produces</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>GET</code></td>
                        <td><code>/v1/jobs</code></td>
                        <td><code>application/json</code></td>
                    </tr>
                </tbody>
            </table>

            <p>The table below shows this endpoint&#39;s support for
                <a href="/api-docs#blocking-queries">blocking queries</a> and
                <a href="/api-docs#acls">required ACLs</a>.
            </p>

            <table>
                <thead>
                    <tr>
                        <th>Blocking Queries</th>
                        <th>ACL Required</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>YES</code></td>
                        <td><code>namespace:list-jobs</code></td>
                    </tr>
                </tbody>
            </table>

            <h3 id="parameters">Parameters</h3>

            <ul>
                <li>
                    <p><code>prefix</code> <code>(string: &quot;&quot;)</code> - Specifies a string to filter jobs on based on
                        an index prefix. This is specified as a query string parameter.</p>
                </li>
                <li>
                    <p><code>namespace</code> <code>(string: &quot;default&quot;)</code> - Specifies the target namespace. Specifying
                        <code>*</code> would return all jobs across all the authorized namespaces.
                    </p>
                </li>
            </ul>

            <h3 id="sample-request">Sample Request</h3>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?prefix=team

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?namespace=*&amp;prefix=team

            </code></pre>

            <h3 id="sample-response">Sample Response</h3>

            <pre><code class="language-json">[
              {
                &quot;ID&quot;: &quot;example&quot;,
                &quot;ParentID&quot;: &quot;&quot;,
                &quot;Name&quot;: &quot;example&quot;,
                &quot;Type&quot;: &quot;service&quot;,
                &quot;Priority&quot;: 50,
                &quot;Status&quot;: &quot;pending&quot;,
                &quot;StatusDescription&quot;: &quot;&quot;,
                &quot;JobSummary&quot;: {
                  &quot;JobID&quot;: &quot;example&quot;,
                  &quot;Namespace&quot;: &quot;default&quot;,
                  &quot;Summary&quot;: {
                    &quot;cache&quot;: {
                      &quot;Queued&quot;: 1,
                      &quot;Complete&quot;: 1,
                      &quot;Failed&quot;: 0,
                      &quot;Running&quot;: 0,
                      &quot;Starting&quot;: 0,
                      &quot;Lost&quot;: 0
                    }
                  },
                  &quot;Children&quot;: {
                    &quot;Pending&quot;: 0,
                    &quot;Running&quot;: 0,
                    &quot;Dead&quot;: 0
                  },
                  &quot;CreateIndex&quot;: 52,
                  &quot;ModifyIndex&quot;: 96
                },
                &quot;CreateIndex&quot;: 52,
                &quot;ModifyIndex&quot;: 93,
                &quot;JobModifyIndex&quot;: 52
              }
            ]

            </code></pre>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPlanResponse'
          headers:
            X-Nomad-Index:
              $ref: '#/components/headers/X-Nomad-Index'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /job/{jobName}/summary:
    get:
      tags:
        - Jobs
      summary: >-
        This endpoint reads summary information about a job.
        https://www.nomadproject.io/api-docs/jobs#read-job-summary.
      operationId: getJobSummary
      parameters:
        - $ref: '#/components/parameters/JobNameParam'
        - $ref: '#/components/parameters/RegionParam'
        - $ref: '#/components/parameters/StaleParam'
        - $ref: '#/components/parameters/PrefixParam'
        - $ref: '#/components/parameters/NamespaceParam'
        - $ref: '#/components/parameters/PerPageParam'
        - $ref: '#/components/parameters/NextTokenParam'
        - $ref: '#/components/parameters/IndexParam'
        - $ref: '#/components/parameters/WaitParam'
        - $ref: '#/components/parameters/NomadTokenHeader'
      responses:
        '200':
          description: >-
            <p>This endpoint lists all known jobs in the system registered with
            Nomad.</p>

            <table>
                <thead>
                    <tr>
                        <th>Method</th>
                        <th>Path</th>
                        <th>Produces</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>GET</code></td>
                        <td><code>/v1/jobs</code></td>
                        <td><code>application/json</code></td>
                    </tr>
                </tbody>
            </table>

            <p>The table below shows this endpoint&#39;s support for
                <a href="/api-docs#blocking-queries">blocking queries</a> and
                <a href="/api-docs#acls">required ACLs</a>.
            </p>

            <table>
                <thead>
                    <tr>
                        <th>Blocking Queries</th>
                        <th>ACL Required</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><code>YES</code></td>
                        <td><code>namespace:list-jobs</code></td>
                    </tr>
                </tbody>
            </table>

            <h3 id="parameters">Parameters</h3>

            <ul>
                <li>
                    <p><code>prefix</code> <code>(string: &quot;&quot;)</code> - Specifies a string to filter jobs on based on
                        an index prefix. This is specified as a query string parameter.</p>
                </li>
                <li>
                    <p><code>namespace</code> <code>(string: &quot;default&quot;)</code> - Specifies the target namespace. Specifying
                        <code>*</code> would return all jobs across all the authorized namespaces.
                    </p>
                </li>
            </ul>

            <h3 id="sample-request">Sample Request</h3>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?prefix=team

            </code></pre>

            <pre><code class="language-shell-session">$ curl
            https://localhost:4646/v1/jobs?namespace=*&amp;prefix=team

            </code></pre>

            <h3 id="sample-response">Sample Response</h3>

            <pre><code class="language-json">[
              {
                &quot;ID&quot;: &quot;example&quot;,
                &quot;ParentID&quot;: &quot;&quot;,
                &quot;Name&quot;: &quot;example&quot;,
                &quot;Type&quot;: &quot;service&quot;,
                &quot;Priority&quot;: 50,
                &quot;Status&quot;: &quot;pending&quot;,
                &quot;StatusDescription&quot;: &quot;&quot;,
                &quot;JobSummary&quot;: {
                  &quot;JobID&quot;: &quot;example&quot;,
                  &quot;Namespace&quot;: &quot;default&quot;,
                  &quot;Summary&quot;: {
                    &quot;cache&quot;: {
                      &quot;Queued&quot;: 1,
                      &quot;Complete&quot;: 1,
                      &quot;Failed&quot;: 0,
                      &quot;Running&quot;: 0,
                      &quot;Starting&quot;: 0,
                      &quot;Lost&quot;: 0
                    }
                  },
                  &quot;Children&quot;: {
                    &quot;Pending&quot;: 0,
                    &quot;Running&quot;: 0,
                    &quot;Dead&quot;: 0
                  },
                  &quot;CreateIndex&quot;: 52,
                  &quot;ModifyIndex&quot;: 96
                },
                &quot;CreateIndex&quot;: 52,
                &quot;ModifyIndex&quot;: 93,
                &quot;JobModifyIndex&quot;: 52
              }
            ]

            </code></pre>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSummary'
          headers:
            X-Nomad-Index:
              $ref: '#/components/headers/X-Nomad-Index'
            X-Nomad-Known-Leader:
              $ref: '#/components/headers/X-Nomad-Known-Leader'
            X-Nomad-Last-Contact:
              $ref: '#/components/headers/X-Nomad-Last-Contact'
        '403':
          $ref: '#/components/responses/Forbidden'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '500':
          $ref: '#/components/responses/InternalServerError'
